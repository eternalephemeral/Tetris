/* pieces.cpp
Patrick Wang
301160793
CMPT 361 Asgn 1

Simple class containing data for tetris pieces, rotations

*/

#include "Pieces.h"

// Pieces definition
char mPieces [7 /*kind */ ][4 /* rotation */ ][4 /* horizontal blocks */ ][4 /* vertical blocks */ ] =
{
// O
  {
   {
    {0, 0, 0, 0},
    {0, 1, 2, 0},
    {0, 1, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 0},
    {0, 1, 2, 0},
    {0, 1, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 0},
    {0, 1, 2, 0},
    {0, 1, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 0},
    {0, 1, 2, 0},
    {0, 1, 1, 0},
    {0, 0, 0, 0},
    }
   },

// I
  {
   {
    {0, 0, 0, 0},
    {1, 1, 2, 1},
    {0, 0, 0, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 0, 2, 0},
    {0, 0, 1, 0},
    {0, 0, 1, 0},
    },
   {
    {0, 0, 0, 0},
    {1, 1, 2, 1},
    {0, 0, 0, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 0, 2, 0},
    {0, 0, 1, 0},
    {0, 0, 1, 0},
    }
   }
  ,
// S
  {
   {
    {0, 0, 0, 0},
    {0, 0, 2, 1},
    {0, 1, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 0, 2, 1},
    {0, 0, 0, 1},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 0},
    {0, 0, 2, 1},
    {0, 1, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 0, 2, 1},
    {0, 0, 0, 1},
    {0, 0, 0, 0},
    }
   },
// Z
  {
   {
    {0, 0, 0, 0},
    {0, 1, 2, 0},
    {0, 0, 1, 1},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 1},
    {0, 0, 2, 1},
    {0, 0, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 0},
    {0, 1, 2, 0},
    {0, 0, 1, 1},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 1},
    {0, 0, 2, 1},
    {0, 0, 1, 0},
    {0, 0, 0, 0},
    }
   },
// L
  {
   {
    {0, 0, 0, 0},
    {0, 1, 2, 1},
    {0, 1, 0, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 0, 2, 0},
    {0, 0, 1, 1},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 0, 1},
    {0, 1, 2, 1},
    {0, 0, 0, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 1, 1, 0},
    {0, 0, 2, 0},
    {0, 0, 1, 0},
    {0, 0, 0, 0},
    }
   },
// J
  {
   {
    {0, 0, 0, 0},
    {0, 1, 2, 1},
    {0, 0, 0, 1},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 1},
    {0, 0, 2, 0},
    {0, 0, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 1, 0, 0},
    {0, 1, 2, 1},
    {0, 0, 0, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 0, 2, 0},
    {0, 1, 1, 0},
    {0, 0, 0, 0},
    }
   },
// T
  {
   {
    {0, 0, 0, 0},
    {0, 1, 2, 1},
    {0, 0, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 0, 2, 1},
    {0, 0, 1, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 1, 2, 1},
    {0, 0, 0, 0},
    {0, 0, 0, 0},
    },
   {
    {0, 0, 1, 0},
    {0, 1, 2, 0},
    {0, 0, 1, 0},
    {0, 0, 0, 0},
    }
   }
};


//Returns the type of a block (0 = no-block, 1 = normal block, 2 = pivot block)
int Pieces::getBlockType (int pPiece, int pRotation, int pX, int pY)
{
	return mPieces [pPiece][pRotation][pX][pY];
}